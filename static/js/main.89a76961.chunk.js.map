{"version":3,"sources":["cartiIt.js","App.js","index.js"],"names":["genRndSymbols","min","max","Math","ceil","floor","random","App","useState","text","setText","cartiText","msg","finalString","split","forEach","letter","rndBool","rndBool2","toUpperCase","toLowerCase","replace","cartiIt","useClipboard","setCopied","type","onChange","_","target","value","onClick","ReactDOM","render","document","getElementById"],"mappings":"2JAMA,IAAMA,EAAgB,WAClB,OAPkBC,EAOG,EAPEC,EAOC,EANxBD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,EAAM,IAAMA,GAKjD,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,QACI,MAAO,OAjBnB,IAAsBA,EAAKC,G,kBCiCZK,MA7Bf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,KAETC,EDeS,SAAiBC,GAC5B,IAAIC,EAAc,GAuBlB,OArBAD,EAAIE,MAAM,IAAIC,SAAQ,SAAAC,GAClB,IAAIC,EAAUd,KAAKG,SAAW,GAC1BY,EAAWf,KAAKG,SAAW,IAE/B,GAAIW,GACc,KAAVD,EACA,OAAOH,GAAe,IAI9BA,GAAeI,EAAUD,EAAOG,cAAgBH,EAAOI,cAExC,MAAXJ,IACIE,IACAL,GAAeI,EAAU,eAAO,8CACpCJ,GAAeb,QAIvBa,EAAcA,EAAYQ,QAAQ,MAAO,ICrC3BC,CAAQb,GAFX,EAGiBc,YAAaZ,GAH9B,mBAGIa,GAHJ,WAUb,OACE,gCACE,yDACA,kDACA,sEACA,uBAAOC,KAAK,OAAOC,SATA,SAAAC,GACrBjB,EAAQiB,EAAEC,OAAOC,UASf,8BACGlB,IAEH,wBAAQmB,QAASN,EAAjB,kBAGA,iCACE,2E,MCtBRO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.89a76961.chunk.js","sourcesContent":["function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nconst genRndSymbols = () => {\r\n    switch (getRandomInt(1, 4)) {\r\n        case 1:\r\n            return \"*!^\"\r\n        case 2:\r\n            return \"+*@\"\r\n        case 3:\r\n            return \"*!+\"\r\n        case 4:\r\n            return \"^*(\"\r\n        default:\r\n            return \"^*++\"\r\n    }\r\n}\r\n\r\nexport default function cartiIt(msg) {\r\n    var finalString = \"\"\r\n\r\n    msg.split('').forEach(letter => {\r\n        var rndBool = Math.random() < .5\r\n        var rndBool2 = Math.random() < .75\r\n\r\n        if (rndBool) {\r\n            if (letter == \"s\") {\r\n                return finalString += \"$\"\r\n            }\r\n        }\r\n\r\n        finalString += rndBool ? letter.toUpperCase() : letter.toLowerCase()\r\n\r\n        if (letter === \" \") {\r\n            if (rndBool2)\r\n                finalString += rndBool ? \"🦋\" : \"🧛🏿‍♂️\"\r\n            finalString += genRndSymbols()\r\n        }\r\n    })\r\n\r\n    finalString = finalString.replace(/\\s/g, '');\r\n\r\n    return finalString\r\n}\r\n\r\n","import React, { useState } from 'react';\nimport cartiIt from './cartiIt';\nimport useClipboard from \"react-use-clipboard\";\n\nfunction App() {\n  const [text, setText] = useState(\"\")\n  var cartiText = cartiIt(text)\n  const [isCopied, setCopied] = useClipboard(cartiText);\n\n\n  const onChangeAction = _ => {\n    setText(_.target.value)\n  }\n\n  return (\n    <div>\n      <h1>took 10 minutes to make</h1>\n      <h2>carti text maker</h2>\n      <h3>type text and carti text will appear</h3>\n      <input type=\"text\" onChange={onChangeAction} />\n      <div>\n        {cartiText}\n      </div>\n      <button onClick={setCopied}>\n        Copy\n      </button>\n      <footer>\n        <p>i will not be designing this website</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}